plugins {
    id('org.springframework.boot')
    id('com.bmuschko.docker-spring-boot-application')
}

dependencies {
    implementation project(':common')
    implementation project(':produkt-api')

    annotationProcessor(group: 'org.projectlombok', name: 'lombok')
    compileOnly(group: 'org.projectlombok', name: 'lombok')

    annotationProcessor(group: 'org.mapstruct', name: 'mapstruct-processor')
    compileOnly(group: 'org.mapstruct', name: 'mapstruct')

    implementation(group: 'org.springframework.boot', name: 'spring-boot-starter-actuator')
    implementation(group: 'org.springframework.boot', name: 'spring-boot-starter-data-mongodb')
    implementation(group: 'org.springframework.boot', name: 'spring-boot-starter-web')
    implementation(group: 'org.springframework.cloud', name: 'spring-cloud-starter-sleuth')
    implementation(group: 'org.springframework.cloud', name: 'spring-cloud-starter-zipkin')
    implementation(group: 'org.springdoc', name: 'springdoc-openapi-ui')
    implementation(group: 'io.micrometer', name: 'micrometer-registry-influx')

    runtimeOnly(group: 'org.springframework.boot', name: 'spring-boot-devtools')

    testImplementation(group: 'org.springframework.boot', name: 'spring-boot-starter-test')
    testImplementation(group: 'au.com.dius', name: 'pact-jvm-provider-junit5')

    testRuntimeOnly(group: 'de.flapdoodle.embed', name: 'de.flapdoodle.embed.mongo')
    testRuntimeOnly(group: 'org.codehaus.groovy', name: 'groovy')
    testRuntimeOnly(group: 'org.codehaus.groovy', name: 'groovy-xml')
}

compileJava {
    options.compilerArgs += '-Amapstruct.defaultComponentModel=spring'
}

docker {
    springBootApplication {
        baseImage = 'openjdk:11'
        ports = [80]
        tag = 'localhost:32000/demo/produkt-service:latest'
    }
}
