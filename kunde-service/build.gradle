plugins {
    id "net.ltgt.apt-idea" version "0.21"
}

apply plugin: 'org.springframework.boot'

dependencies {
    implementation project(':common')
    implementation project(':kunde-api')

    annotationProcessor("org.projectlombok:lombok:${lombokVersion}")
    compileOnly("org.projectlombok:lombok:${lombokVersion}")

    implementation('org.springframework.boot:spring-boot-starter')
    implementation('org.springframework.boot:spring-boot-starter-actuator')
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-aop')
    implementation('org.springframework.retry:spring-retry')
    implementation('org.springframework.cloud:spring-cloud-starter-config')
    implementation('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
    implementation('org.springframework.cloud:spring-cloud-starter-sleuth')
    implementation('org.springframework.cloud:spring-cloud-starter-zipkin')

    runtimeOnly('org.springframework.boot:spring-boot-devtools')

    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    compileOnly "org.mapstruct:mapstruct-jdk8:${mapstructVersion}"

    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation("org.junit.jupiter:junit-jupiter:${junitJupiterVersion}")
    testImplementation "au.com.dius:pact-jvm-provider-junit5_2.12:${pactJvmVersion}"

    testImplementation("io.rest-assured:rest-assured:${restAssuredVersion}")
    testImplementation("org.assertj:assertj-core:${assertjVersion}")
    testImplementation "org.mockito:mockito-junit-jupiter:${mockitoVersion}"

    testRuntimeOnly 'com.h2database:h2:1.4.199'
    runtimeOnly "org.postgresql:postgresql"
}

compileJava {
    options.compilerArgs += '-Amapstruct.defaultComponentModel=spring'
}
